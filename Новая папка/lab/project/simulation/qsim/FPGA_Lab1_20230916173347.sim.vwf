/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("p_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("p_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

TRANSITION_LIST("a[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("a[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("a[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("a[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("b[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 360.0;
		}
	}
}

TRANSITION_LIST("b[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("b[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("b[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("p_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("p_out")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.198;
			LEVEL 0 FOR 156.693;
			LEVEL 1 FOR 4.043;
			LEVEL 0 FOR 70.191;
			LEVEL 1 FOR 9.809;
			LEVEL 0 FOR 65.957;
			LEVEL 1 FOR 14.043;
			LEVEL 0 FOR 60.402;
			LEVEL 1 FOR 19.598;
			LEVEL 0 FOR 56.237;
			LEVEL 1 FOR 23.763;
			LEVEL 0 FOR 50.471;
			LEVEL 1 FOR 29.529;
			LEVEL 0 FOR 46.237;
			LEVEL 1 FOR 34.213;
			LEVEL 0 FOR 39.234;
			LEVEL 1 FOR 40.316;
			LEVEL 0 FOR 35.957;
			LEVEL 1 FOR 44.493;
			LEVEL 0 FOR 29.741;
			LEVEL 1 FOR 50.259;
			LEVEL 0 FOR 25.507;
			LEVEL 1 FOR 54.911;
			LEVEL 0 FOR 19.534;
			LEVEL 1 FOR 11.664;
		}
	}
}

TRANSITION_LIST("sum[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.54;
			LEVEL 0 FOR 40.059;
			LEVEL 1 FOR 40.316;
			LEVEL 0 FOR 35.956;
			LEVEL 1 FOR 39.948;
			LEVEL 0 FOR 34.286;
			LEVEL 1 FOR 39.948;
			LEVEL 0 FOR 35.818;
			LEVEL 1 FOR 39.948;
			LEVEL 0 FOR 34.536;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 35.869;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 34.268;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 35.8;
			LEVEL 1 FOR 39.966;
			LEVEL 0 FOR 34.262;
			LEVEL 1 FOR 39.139;
			LEVEL 0 FOR 40.4;
			LEVEL 1 FOR 35.862;
			LEVEL 0 FOR 40.052;
			LEVEL 1 FOR 34.182;
			LEVEL 0 FOR 40.052;
			LEVEL 1 FOR 35.714;
			LEVEL 0 FOR 40.052;
			LEVEL 1 FOR 34.45;
			LEVEL 0 FOR 11.679;
		}
	}
}

TRANSITION_LIST("sum[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.356;
			LEVEL 0 FOR 20.237;
			LEVEL 1 FOR 20.312;
			LEVEL 0 FOR 19.688;
			LEVEL 1 FOR 20.312;
			LEVEL 0 FOR 15.526;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 14.289;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 15.821;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 14.072;
			LEVEL 1 FOR 20.1;
			LEVEL 0 FOR 20.402;
			LEVEL 1 FOR 19.598;
			LEVEL 0 FOR 20.402;
			LEVEL 1 FOR 15.426;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 14.179;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 15.711;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 14.567;
			LEVEL 0 FOR 19.595;
			LEVEL 1 FOR 20.312;
			LEVEL 0 FOR 19.688;
			LEVEL 1 FOR 20.312;
			LEVEL 0 FOR 15.526;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 14.289;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 15.821;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 20.055;
			LEVEL 1 FOR 19.945;
			LEVEL 0 FOR 14.072;
			LEVEL 1 FOR 20.1;
			LEVEL 0 FOR 12.452;
		}
	}
}

TRANSITION_LIST("sum[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.56;
			LEVEL 0 FOR 9.647;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 11.068;
			LEVEL 0 FOR 4.697;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 5.225;
			LEVEL 1 FOR 9.02;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 11.254;
			LEVEL 1 FOR 4.501;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 5.029;
			LEVEL 0 FOR 9.206;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 11.068;
			LEVEL 0 FOR 4.697;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 5.225;
			LEVEL 1 FOR 9.02;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 11.254;
			LEVEL 1 FOR 4.501;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 5.029;
			LEVEL 0 FOR 9.206;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 11.068;
			LEVEL 0 FOR 4.697;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 5.225;
			LEVEL 1 FOR 9.02;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 10.452;
			LEVEL 1 FOR 9.548;
			LEVEL 0 FOR 11.254;
			LEVEL 1 FOR 4.501;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 9.902;
			LEVEL 0 FOR 10.098;
			LEVEL 1 FOR 5.029;
			LEVEL 0 FOR 9.206;
			LEVEL 1 FOR 10.276;
			LEVEL 0 FOR 9.724;
			LEVEL 1 FOR 2.793;
		}
	}
}

TRANSITION_LIST("sum[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.409;
			LEVEL 0 FOR 5.454;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 9.975;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 10.025;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 9.975;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 10.025;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 9.975;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 10.025;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 9.975;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 10.025;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 9.975;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 10.025;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 9.975;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 5.402;
			LEVEL 1 FOR 4.598;
			LEVEL 0 FOR 10.025;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 4.648;
			LEVEL 1 FOR 5.352;
			LEVEL 0 FOR 1.785;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "b[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "p_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sum";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "sum[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "p_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 10000;
	MASTER = TRUE;
}
;
