/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("a")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("a[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("a[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "a";
}

SIGNAL("b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("b[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("b[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "b";
}

SIGNAL("p_in")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("p_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("sum[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

SIGNAL("sum[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "sum";
}

TRANSITION_LIST("a[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 56.0;
			LEVEL 0 FOR 56.0;
			LEVEL 1 FOR 48.0;
		}
	}
}

TRANSITION_LIST("a[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 28.0;
			LEVEL 0 FOR 28.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("a[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 14.0;
			LEVEL 0 FOR 14.0;
			LEVEL 1 FOR 6.0;
		}
	}
}

TRANSITION_LIST("a[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 7.0;
			LEVEL 1 FOR 7.0;
			LEVEL 0 FOR 6.0;
		}
	}
}

TRANSITION_LIST("b[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 360.0;
		}
	}
}

TRANSITION_LIST("b[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("b[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("b[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 40.0;
		}
	}
}

TRANSITION_LIST("p_in")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("p_out")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.198;
			LEVEL 0 FOR 106.693;
			LEVEL 1 FOR 6.043;
			LEVEL 0 FOR 98.191;
			LEVEL 1 FOR 13.809;
			LEVEL 0 FOR 91.957;
			LEVEL 1 FOR 20.043;
			LEVEL 0 FOR 78.237;
			LEVEL 1 FOR 33.763;
			LEVEL 0 FOR 70.471;
			LEVEL 1 FOR 41.529;
			LEVEL 0 FOR 64.237;
			LEVEL 1 FOR 47.763;
			LEVEL 0 FOR 49.957;
			LEVEL 1 FOR 62.493;
			LEVEL 0 FOR 41.741;
			LEVEL 1 FOR 70.259;
			LEVEL 0 FOR 35.507;
			LEVEL 1 FOR 60.109;
		}
	}
}

TRANSITION_LIST("sum[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.54;
			LEVEL 0 FOR 56.059;
			LEVEL 1 FOR 50.22;
			LEVEL 0 FOR 54.374;
			LEVEL 1 FOR 49.86;
			LEVEL 0 FOR 49.818;
			LEVEL 1 FOR 55.948;
			LEVEL 0 FOR 48.536;
			LEVEL 1 FOR 49.801;
			LEVEL 0 FOR 56.034;
			LEVEL 1 FOR 48.2;
			LEVEL 0 FOR 49.8;
			LEVEL 1 FOR 55.966;
			LEVEL 0 FOR 47.801;
			LEVEL 1 FOR 49.862;
			LEVEL 0 FOR 56.052;
			LEVEL 1 FOR 48.182;
			LEVEL 0 FOR 54.579;
			LEVEL 1 FOR 51.187;
			LEVEL 0 FOR 48.536;
			LEVEL 1 FOR 11.645;
		}
	}
}

TRANSITION_LIST("sum[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.356;
			LEVEL 0 FOR 28.237;
			LEVEL 1 FOR 28.312;
			LEVEL 0 FOR 24.287;
			LEVEL 1 FOR 25.184;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 26.267;
			LEVEL 0 FOR 21.967;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 21.711;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 20.574;
			LEVEL 1 FOR 27.598;
			LEVEL 0 FOR 28.402;
			LEVEL 1 FOR 21.426;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 20.289;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 21.711;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 20.217;
			LEVEL 1 FOR 28.312;
			LEVEL 0 FOR 27.688;
			LEVEL 1 FOR 21.783;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 22.377;
			LEVEL 1 FOR 25.857;
			LEVEL 0 FOR 28.055;
			LEVEL 1 FOR 26.472;
			LEVEL 0 FOR 23.294;
			LEVEL 1 FOR 27.945;
			LEVEL 0 FOR 28.811;
			LEVEL 1 FOR 19.361;
			LEVEL 0 FOR 12.452;
		}
	}
}

TRANSITION_LIST("sum[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.56;
			LEVEL 0 FOR 13.647;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 10.428;
			LEVEL 0 FOR 11.337;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 12.276;
			LEVEL 0 FOR 8.323;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 14.452;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 14.452;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 7.853;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 6.333;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 8.25;
			LEVEL 1 FOR 13.141;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 10.448;
			LEVEL 1 FOR 9.797;
			LEVEL 0 FOR 14.452;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 14.452;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 15.254;
			LEVEL 1 FOR 6.501;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 6.511;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 13.724;
			LEVEL 1 FOR 7.667;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 8.276;
			LEVEL 0 FOR 12.323;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 14.452;
			LEVEL 1 FOR 13.548;
			LEVEL 0 FOR 14.452;
			LEVEL 1 FOR 14.704;
			LEVEL 0 FOR 6.697;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 14.098;
			LEVEL 1 FOR 13.902;
			LEVEL 0 FOR 6.333;
			LEVEL 1 FOR 14.276;
			LEVEL 0 FOR 12.517;
		}
	}
}

TRANSITION_LIST("sum[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.409;
			LEVEL 0 FOR 7.454;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 14.025;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 13.975;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 13.975;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 14.025;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 14.025;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 3.625;
			LEVEL 0 FOR 2.998;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 13.975;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 3.079;
			LEVEL 1 FOR 4.298;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 14.025;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 14.025;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 13.975;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 6.598;
			LEVEL 0 FOR 7.402;
			LEVEL 1 FOR 13.975;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 7.352;
			LEVEL 0 FOR 6.648;
			LEVEL 1 FOR 5.137;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "a";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "a[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "a[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "b";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "b[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "b[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "p_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "sum";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "sum[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "sum[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "p_in";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
